"""
Django views for VerbalInformation app.

Generated by 'juan-diego'
date_created: 21/03/2023

This views file is where we put the "logic" of our application.
It will extract information from the model you created and deliver it to a template.
"""

from rest_framework import generics
from rest_framework.response import Response
from rest_framework.views import APIView
from .serializers import VerbalInformationSerializers
from .models import VerbalInformation


class RequestTestAPI(APIView):
    """View to check if API is working"""

    def get(self, resquest, format=None):
        return Response({"API": "OK"})


class VerbalInformationCreateViewSet(generics.CreateAPIView):
    """Create Product With Method: 'Post'"""

    queryset = VerbalInformation.objects.all()
    serializer_class = VerbalInformationSerializers


class VerbalInformationRetrieveUpdateDeleteViewSet(
    generics.RetrieveUpdateDestroyAPIView
):
    """Update/Delete/Retrieve Product with oone these Method: 'GET' / 'UPDATE' / 'DELETE'"""

    queryset = VerbalInformation.objects.all()
    serializer_class = VerbalInformationSerializers


class VerbalInformationListViewSet(generics.ListAPIView):
    """View to List all Product With Method: 'GET'"""

    serializer_class = VerbalInformationSerializers

    def get(self, request, *args, **kwargs):
        return self.list(request, *args, **kwargs)

    def list(self, request, *args, **kwargs):
        queryset = VerbalInformation.objects.filter(
            company_id=self.kwargs["company_id"]
        )

        page = self.paginate_queryset(queryset)
        if page is not None:
            serializer = self.get_serializer(page, many=True)
            return self.get_paginated_response(serializer.data)

        serializer = self.get_serializer(queryset, many=True)
        return Response(serializer.data)
